name: CI

on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch
  push:
    branches:
    - main
    paths:
     - '.github/**'
     - 'src/**'
     - '*.sln'
  pull_request:
    branches:
    - main
    paths:
     - 'src/**'
     - '*.sln'
  release:
    types:
    - published

env:
  # Disable the .NET logo in the console output.
  DOTNET_NOLOGO: true
  # Set the DOTNET_SKIP_FIRST_TIME_EXPERIENCE environment variable to stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  # Set the build number in MinVer
  MINVERBUILDMETADATA: build.${{github.run_number}}
  # Set artifacts directory
  BUILD_ARTIFACT_PATH: './Artifacts'

jobs:
  build:
    name: Build on ${{matrix.os}}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ubuntu-latest]
    
    steps:
    - name: 'Checkout'
      uses: actions/checkout@v1
      with:
        fetch-depth: 0
    - name: 'Install .NET SDK'
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: |
          7.0.x
    - name: '.NET Restore'
      run: dotnet restore
    - name: 'Build Project'
      run: dotnet build -c Release
    - name: 'Pack NuGet'
      run: dotnet pack --no-build --no-restore -c Release -o ${{env.BUILD_ARTIFACT_PATH}}
    - name: 'Publish Artifacts'
      uses: actions/upload-artifact@v3
      with:
        name: ${{matrix.os}}
        path: |
          ${{env.BUILD_ARTIFACT_PATH}}
          !${{env.BUILD_ARTIFACT_PATH}}/**/In/**/*
  push-to-nuget:
    name: 'Push NuGet Packages'
    needs: build
    if: github.event_name == 'release'
    environment:
      name: 'NuGet.org Packages'
      url: https://www.nuget.org/packages
    runs-on: ubuntu-latest
    steps:
    - name: 'Download Artifact'
      uses: actions/download-artifact@v3
      with:
        name: 'ubuntu-latest'
    - name: 'NuGet Push'
      run: |
        Get-ChildItem . -Filter *.nupkg |
        Where-Object { !$_.Name.Contains('preview') } |
        ForEach-Object { dotnet nuget push $_ --source https://api.nuget.org/v3/index.json --skip-duplicate --api-key ${{secrets.NuGet_Key}} }
      shell: pwsh
    
